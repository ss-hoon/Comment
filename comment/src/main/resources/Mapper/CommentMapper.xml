<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
   <!-- 댓글 관련 Mapper 쿼리 작성 -->
   <mapper namespace = "com.app.Mapper.CommentMapper">   
   
   		<!-- 기본 게시글 총 개수 검색 -->
   		<select id="getTotalCommentCnt" resultType="int">
   			SELECT
   				COUNT(*)
   			FROM
   				COMMENT
   			WHERE
   				DEPTH = 0;
   		</select>
   
   		<!-- 댓글 목록 검색 -->
   		<select id="selectComment" parameterType="com.app.Domain.Comment" resultType="com.app.Domain.Comment">
   			SELECT
   				*
   			FROM
   				COMMENT
   			WHERE
   				DEPTH = 0
   			ORDER BY
   				PARENT, COMMENT.ORDER;
   		</select>
   		
   		<select id="selectNestedComment" parameterType="int" resultType="com.app.Domain.Comment">
   			SELECT
				*
			FROM
				COMMENT
			WHERE
				PARENT = #{parent}
			    AND COMMENT.ORDER &gt; 0
			ORDER BY
				COMMENT.ORDER;
   		</select>
   		
   		<!-- 댓글 추가 -->
   		<insert id="insertComment">
   			INSERT
   			INTO
   				COMMENT(
   					CONTENTS,
   					PARENT,
   					USER_ID,
   					CREATED_DATE
   				)
   			VALUES(
   				#{contents},
   				LAST_INSERT_ID() + 1,
   				#{userId},
   				now()
   			);
   		</insert>
   		
   		<!-- order를 움직여야 하는지 확인 -->
   		<select id="existOrder" parameterType="com.app.Domain.Comment" resultType="int">
	   		SELECT EXISTS(
		   		SELECT
					COMMENT.ORDER - 1
				FROM
					COMMENT
				WHERE
					PARENT = #{parent}
				    AND COMMENT.ORDER &gt; #{order}
				    AND DEPTH &lt;= #{depth}
				ORDER BY
					PARENT, COMMENT.ORDER
				LIMIT 1
	    	)
   		</select>
   		
   		<!-- order를 움직이지 않는 경우 해당 parent의 맨마지막 order 반환 -->
   		<select id="lastOrder" parameterType="int" resultType="int">
   			SELECT
				COMMENT.ORDER
			FROM
				COMMENT
			WHERE
			    PARENT = #{parent}
			ORDER BY
				COMMENT.ORDER DESC
			LIMIT 1;
   		</select>
   		
   		<!-- order를 움직여야 하는 경우 그 위치의 order 반환 -->
   		<select id="getOrder" parameterType="com.app.Domain.Comment" resultType="int">
   			SELECT
				COMMENT.ORDER - 1
			FROM
				COMMENT
			WHERE
				PARENT = #{parent}
			    AND COMMENT.ORDER &gt; #{order}
			    AND DEPTH &lt;= #{depth}
			ORDER BY
				PARENT, COMMENT.ORDER
			LIMIT 1
   		</select>
   		
   		<!-- 삽입할 곳 뒤에 있는 row의 order를 하나씩 뒤로 미는 작업 -->
   		<update id="updateOrder" parameterType="com.app.Domain.Comment">
   			UPDATE
				COMMENT
			SET
				COMMENT.ORDER = COMMENT.ORDER + 1
			WHERE
				PARENT = #{parent}
			    AND COMMENT.ORDER > #{order}
   		</update>
   		
   		<!-- 해당 위치에 대댓글 추가 -->
   		<insert id="nestedInsertComment">
   			INSERT
   			INTO
   				COMMENT(
   					PARENT,
   					DEPTH,
   					COMMENT.ORDER,
   					CONTENTS,
   					USER_ID,
   					CREATED_DATE
   				)
   			VALUES(
   				#{parent},
   				#{depth} + 1,
   				#{order} + 1,
   				#{contents},
   				#{userId},
   				now()
   			)
   		</insert>
   		
   		<!-- 댓글 수정 -->
   		<update id="updateComment">
   			UPDATE
   				COMMENT
   			SET
   				CONTENTS = #{contents},
   				UPDATED_DATE = NOW()
   			WHERE
   				IDX = #{idx}
   		</update>
   		
   		<!-- 댓글 삭제 -->
   		<update id="deleteComment">
   			UPDATE
   				COMMENT
   			SET
   				CONTENTS = '삭제된 게시물입니다',
   				USER_ID = '찾을 수 없습니다',
   				DELETED = 'Y'
   			WHERE
   				IDX = #{idx}
   		</update>
   </mapper>